/*******************************************************************************
 * Copyright (c) 2012, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header          LockException.h
 * @author          Jean-David Gadina - www.xs-labs.com
 * @copyright       (c) 2012, XSLabs
 */

#ifndef __EOS_EXCEPTION_H__
#define __EOS_EXCEPTION_H__

#include <exception>
#include <string>

namespace EOS
{
    /*!
     * @class           EOS::Exception
     * @abstract        ...
     * @description     ...
     */
    class Exception: public std::exception
    {
        public:
            
            /*!
             * @method          EOS::Exception::Exception
             * @abstract        ...
             * @description     ...
             */
            Exception();
            
            /*!
             * @method          EOS::Exception::Exception
             * @abstract        ...
             * @description     ...
             */
            Exception( int );
            
            /*!
             * @method          EOS::Exception::Exception
             * @abstract        ...
             * @description     ...
             */
            Exception( int, std::string & );
            
            /*!
             * @method          EOS::Exception::Exception
             * @abstract        ...
             * @description     ...
             */
            Exception( std::string & );
            
            /*!
             * @method          EOS::Exception::~Exception
             * @abstract        ...
             * @description     ...
             */
            virtual ~Exception() throw();
            
            /*!
             * @method          EOS::Exception::what
             * @abstract        ...
             * @description     ...
             */
            virtual const char * what() const throw();
            
            /*!
             * @method          EOS::Exception::code
             * @abstract        ...
             * @description     ...
             */
            int code() const;
            
            /*!
             * @method          EOS::Exception::code
             * @abstract        ...
             * @description     ...
             */
            void code( int );
            
            /*!
             * @method          EOS::Exception::code
             * @abstract        ...
             * @description     ...
             */
            const std::string & reason() const;
            
            /*!
             * @method          EOS::Exception::code
             * @abstract        ...
             * @description     ...
             */
            void reason( const std::string & );
            
        protected:
            
            /*!
             * @var             EOS::Exception:::_code
             * @abstract        ...
             * @description     ...
             */
            int _code;
            
            /*!
             * @var             EOS::Exception:::_reason
             * @abstract        ...
             * @description     ...
             */
            std::string _reason;
    };
}

#endif /* __EOS_EXCEPTION_H__ */
